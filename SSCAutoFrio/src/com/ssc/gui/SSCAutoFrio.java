//<editor-fold defaultstate="collapsed" desc=" License ">
/*
 * @(#)SSCAutoFrio.java Created on 17/10/2014, 01:02:49 PM
 *
 * This program is free software: you can redistribute it and/or modify it under
 * the terms of the GNU General Public License as published by the Free Software
 * Foundation, either version 3 of the License, or (at your option) any later
 * version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
 * details.
 *
 * You should have received a copy of the GNU General Public License along with
 * this program.  If not, see <http://www.gnu.org/licenses>
 *
 * Copyright (C) 2014 Alan García. All rights reserved.
 */
//</editor-fold>
package com.ssc.gui;

import com.ssc.excepciones.NonexistentEntityException;
import com.ssc.excepciones.PreexistingEntityException;
import com.ssc.interfaznegocio.INegocio;
import com.ssc.negocio.FNegocio;
import com.ssc.objetosnegocio.Cliente;
import com.ssc.objetosnegocio.Orden;
import com.ssc.objetosnegocio.Tiene;
import com.ssc.objetosnegocio.Vehiculo;
import de.javasoft.plaf.synthetica.SyntheticaWhiteVisionLookAndFeel;
import static java.awt.Frame.MAXIMIZED_BOTH;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import javax.swing.event.ChangeEvent;
import javax.swing.table.DefaultTableModel;

/**
 * Class SSCAutoFrio
 *
 * @author Alan García <bearz@outlook.com>
 * @version 1.0
 */
public class SSCAutoFrio extends javax.swing.JFrame {

    INegocio ne;
    DefaultTableModel table1, table2, table3, table4;
    String id;

    /**
     * Creates new form SSCAutoFrio
     */
    public SSCAutoFrio() {
        ne = new FNegocio();
        initComponents();
        setLocationRelativeTo(null);
        setExtendedState(MAXIMIZED_BOTH);
        table1 = (DefaultTableModel) tableReg.getModel();
        table2 = (DefaultTableModel) tableCot.getModel();
        table3 = (DefaultTableModel) tableAce.getModel();
        table4 = (DefaultTableModel) tableTie.getModel();
        tableReg.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int fila;
                fila = tableReg.getSelectedRow();
                id = table1.getValueAt(fila, 0).toString();
            }
        });        
        tableTie.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int fila;
                fila = tableTie.getSelectedRow();
                id = table4.getValueAt(fila, 0).toString();
            }
        });
        actualizaListas();
    }

    public Image iconSSCAutoFrio() {
        Image retValue = Toolkit.getDefaultToolkit().
                getImage(ClassLoader.getSystemResource("com/ssc/img/sscicon.png"));
        return retValue;
    }

    private void centrar(JInternalFrame internalFrame) {
        int x = (desktopPane.getWidth() / 2) - internalFrame.getWidth() / 2;
        int y = (desktopPane.getHeight() / 2) - internalFrame.getHeight() / 2;
        if (internalFrame.isShowing()) {
            internalFrame.setLocation(x, y);
        } else {
            desktopPane.add(internalFrame);
            internalFrame.setLocation(x, y);
            internalFrame.show();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Cotizacion = new javax.swing.JInternalFrame();
        jTextField1 = new javax.swing.JTextField();
        desktopPane = new javax.swing.JDesktopPane();
        jLabel4 = new javax.swing.JLabel();
        Monitor = new javax.swing.JInternalFrame();
        jScrollPane5 = new javax.swing.JScrollPane();
        tableReg = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        tableCot = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        tableAce = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnAgregarOrden = new javax.swing.JButton();
        btnEliminarOrden = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        TomaOrden = new javax.swing.JInternalFrame();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        lblFolio = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        lblNom = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtCom = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableTie = new javax.swing.JTable();
        btnOrdenAceptar = new javax.swing.JButton();
        btnOrdenCancelar = new javax.swing.JButton();
        jToolBar1 = new javax.swing.JToolBar();
        btnMonitor = new javax.swing.JButton();
        btnOrden = new javax.swing.JButton();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        openMenuItem = new javax.swing.JMenuItem();
        saveMenuItem = new javax.swing.JMenuItem();
        saveAsMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        cutMenuItem = new javax.swing.JMenuItem();
        copyMenuItem = new javax.swing.JMenuItem();
        pasteMenuItem = new javax.swing.JMenuItem();
        deleteMenuItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        contentMenuItem = new javax.swing.JMenuItem();
        aboutMenuItem = new javax.swing.JMenuItem();

        Cotizacion.setVisible(true);

        javax.swing.GroupLayout CotizacionLayout = new javax.swing.GroupLayout(Cotizacion.getContentPane());
        Cotizacion.getContentPane().setLayout(CotizacionLayout);
        CotizacionLayout.setHorizontalGroup(
            CotizacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 24, Short.MAX_VALUE)
        );
        CotizacionLayout.setVerticalGroup(
            CotizacionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jTextField1.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sistema de Seguimiento de Clientes Auto Frio");
        setIconImage(iconSSCAutoFrio());

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ssc/img/ssc.png"))); // NOI18N
        jLabel4.setBounds(610, 160, 660, 430);
        desktopPane.add(jLabel4, javax.swing.JLayeredPane.DEFAULT_LAYER);

        Monitor.setClosable(true);
        Monitor.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        Monitor.setIconifiable(true);
        Monitor.setTitle("SSCAutoFrio - Monitor de Ordenes");
        Monitor.setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ssc/img/monitor24.png"))); // NOI18N
        Monitor.setVisible(false);

        tableReg.setAutoCreateRowSorter(true);
        tableReg.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Cliente", "Vehículo", "Fecha"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(tableReg);
        tableReg.getColumnModel().getColumn(0).setPreferredWidth(5);
        tableReg.getColumnModel().getColumn(3).setPreferredWidth(20);

        tableCot.setAutoCreateRowSorter(true);
        tableCot.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Cliente", "Vehículo", "Fecha"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(tableCot);
        tableCot.getColumnModel().getColumn(0).setPreferredWidth(5);
        tableCot.getColumnModel().getColumn(3).setPreferredWidth(20);

        tableAce.setAutoCreateRowSorter(true);
        tableAce.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Cliente", "Vehículo", "Fecha"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tableAce);
        tableAce.getColumnModel().getColumn(0).setPreferredWidth(5);
        tableAce.getColumnModel().getColumn(3).setPreferredWidth(20);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 204, 204));
        jLabel1.setText("Ordenes Registradas");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 204, 204));
        jLabel2.setText("Ordenes Cotizadas");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 204, 204));
        jLabel3.setText("Ordenes Aceptadas");

        btnAgregarOrden.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ssc/img/add24.png"))); // NOI18N
        btnAgregarOrden.setToolTipText("Añadir Orden");
        btnAgregarOrden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarOrdenActionPerformed(evt);
            }
        });

        btnEliminarOrden.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ssc/img/del24.png"))); // NOI18N
        btnEliminarOrden.setToolTipText("Eliminar Orden");
        btnEliminarOrden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarOrdenActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ssc/img/redo24.png"))); // NOI18N
        jButton3.setToolTipText("Cotizar");

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ssc/img/del24.png"))); // NOI18N
        jButton4.setToolTipText("Eliminar Cotización");

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ssc/img/redo24.png"))); // NOI18N
        jButton5.setToolTipText("Aceptar");

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ssc/img/undo24.png"))); // NOI18N
        jButton6.setToolTipText("Devolver");

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ssc/img/apply24.png"))); // NOI18N
        jButton7.setToolTipText("Liberar");

        javax.swing.GroupLayout MonitorLayout = new javax.swing.GroupLayout(Monitor.getContentPane());
        Monitor.getContentPane().setLayout(MonitorLayout);
        MonitorLayout.setHorizontalGroup(
            MonitorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MonitorLayout.createSequentialGroup()
                .addGap(122, 122, 122)
                .addComponent(jLabel1)
                .addGap(291, 291, 291)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(148, 148, 148))
            .addGroup(MonitorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MonitorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(MonitorLayout.createSequentialGroup()
                        .addComponent(btnAgregarOrden)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEliminarOrden)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(MonitorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(MonitorLayout.createSequentialGroup()
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton5))
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addGroup(MonitorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MonitorLayout.createSequentialGroup()
                        .addComponent(jButton6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton7))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        MonitorLayout.setVerticalGroup(
            MonitorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MonitorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MonitorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(MonitorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jLabel2)))
                .addGap(12, 12, 12)
                .addGroup(MonitorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(MonitorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton7)
                    .addComponent(btnEliminarOrden)
                    .addComponent(btnAgregarOrden)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(jButton5)
                    .addComponent(jButton6))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        Monitor.setBounds(0, 0, 1270, 520);
        desktopPane.add(Monitor, javax.swing.JLayeredPane.DEFAULT_LAYER);

        TomaOrden.setClosable(true);
        TomaOrden.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        TomaOrden.setIconifiable(true);
        TomaOrden.setTitle("SSCAutoFrio - Toma de Orden");
        TomaOrden.setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ssc/img/orden24.png"))); // NOI18N
        TomaOrden.setVisible(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Registrar Orden", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Folio:");

        lblFolio.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblFolio.setForeground(new java.awt.Color(255, 0, 0));
        lblFolio.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblFolio.setText("1");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setText("ID Cliente:");

        txtId.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtId.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdActionPerformed(evt);
            }
        });

        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ssc/img/find16.png"))); // NOI18N

        jButton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ssc/img/add16.png"))); // NOI18N

        lblNom.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblNom.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Problema:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        txtCom.setColumns(20);
        txtCom.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtCom.setRows(5);
        jScrollPane1.setViewportView(txtCom);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tableTie.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Descripción"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tableTie);
        tableTie.getColumnModel().getColumn(0).setMaxWidth(60);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblFolio, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(29, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblNom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblFolio, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblNom, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnOrdenAceptar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ssc/img/apply24.png"))); // NOI18N
        btnOrdenAceptar.setText("Aceptar");
        btnOrdenAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrdenAceptarActionPerformed(evt);
            }
        });

        btnOrdenCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ssc/img/cancel.png"))); // NOI18N
        btnOrdenCancelar.setText("Cancelar");
        btnOrdenCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrdenCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout TomaOrdenLayout = new javax.swing.GroupLayout(TomaOrden.getContentPane());
        TomaOrden.getContentPane().setLayout(TomaOrdenLayout);
        TomaOrdenLayout.setHorizontalGroup(
            TomaOrdenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TomaOrdenLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(TomaOrdenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TomaOrdenLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnOrdenAceptar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnOrdenCancelar)))
                .addContainerGap())
        );
        TomaOrdenLayout.setVerticalGroup(
            TomaOrdenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TomaOrdenLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(TomaOrdenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOrdenCancelar)
                    .addComponent(btnOrdenAceptar))
                .addContainerGap())
        );

        TomaOrden.setBounds(0, 0, 465, 483);
        desktopPane.add(TomaOrden, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jToolBar1.setRollover(true);

        btnMonitor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ssc/img/monitor24.png"))); // NOI18N
        btnMonitor.setToolTipText("Monitor de Ordenes");
        btnMonitor.setFocusable(false);
        btnMonitor.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnMonitor.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnMonitor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMonitorActionPerformed(evt);
            }
        });
        jToolBar1.add(btnMonitor);

        btnOrden.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ssc/img/orden24.png"))); // NOI18N
        btnOrden.setFocusable(false);
        btnOrden.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnOrden.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnOrden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrdenActionPerformed(evt);
            }
        });
        jToolBar1.add(btnOrden);

        fileMenu.setMnemonic('f');
        fileMenu.setText("File");

        openMenuItem.setMnemonic('o');
        openMenuItem.setText("Open");
        fileMenu.add(openMenuItem);

        saveMenuItem.setMnemonic('s');
        saveMenuItem.setText("Save");
        fileMenu.add(saveMenuItem);

        saveAsMenuItem.setMnemonic('a');
        saveAsMenuItem.setText("Save As ...");
        saveAsMenuItem.setDisplayedMnemonicIndex(5);
        fileMenu.add(saveAsMenuItem);

        exitMenuItem.setMnemonic('x');
        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        editMenu.setMnemonic('e');
        editMenu.setText("Edit");

        cutMenuItem.setMnemonic('t');
        cutMenuItem.setText("Cut");
        editMenu.add(cutMenuItem);

        copyMenuItem.setMnemonic('y');
        copyMenuItem.setText("Copy");
        editMenu.add(copyMenuItem);

        pasteMenuItem.setMnemonic('p');
        pasteMenuItem.setText("Paste");
        editMenu.add(pasteMenuItem);

        deleteMenuItem.setMnemonic('d');
        deleteMenuItem.setText("Delete");
        editMenu.add(deleteMenuItem);

        menuBar.add(editMenu);

        helpMenu.setMnemonic('h');
        helpMenu.setText("Help");

        contentMenuItem.setMnemonic('c');
        contentMenuItem.setText("Contents");
        helpMenu.add(contentMenuItem);

        aboutMenuItem.setMnemonic('a');
        aboutMenuItem.setText("About");
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktopPane)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 1280, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(desktopPane, javax.swing.GroupLayout.DEFAULT_SIZE, 954, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void btnMonitorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMonitorActionPerformed
        if (Monitor.isVisible()) {
            Monitor.setVisible(false);
        } else {
            Monitor.setVisible(true);
            centrar(Monitor);
        }
    }//GEN-LAST:event_btnMonitorActionPerformed

    private void btnOrdenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrdenActionPerformed
        if (TomaOrden.isVisible()) {
            TomaOrden.setVisible(false);
        } else {
            TomaOrden.setVisible(true);
            centrar(TomaOrden);
            int sig = ne.lastInsert() + 1;
            lblFolio.setText(String.valueOf(sig));
        }
    }//GEN-LAST:event_btnOrdenActionPerformed

    private void txtIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdActionPerformed
        buscarCliente();
    }//GEN-LAST:event_txtIdActionPerformed

    private void btnOrdenAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrdenAceptarActionPerformed
        Vehiculo v = new Vehiculo(Integer.parseInt(id));
        if(id == null) {
            JOptionPane.showMessageDialog(this, "Debe de seleccionar un vehículo", 
                    "Error", JOptionPane.ERROR_MESSAGE, null);
        }
        String com = txtCom.getText().trim();
        Date date;
        date = new Date();
        DateFormat dateFormat;
        dateFormat = new SimpleDateFormat("dd/MM/yyyy");
        String fecha;
        fecha = dateFormat.format(date);
        try {
            Cliente c = ne.buscarCliente(txtId.getText().trim());
            Orden o = new Orden(c,v,com,fecha,"Registrada");
            ne.registrarOrden(o);
            JOptionPane.showMessageDialog(this, "Orden Agregada correctamente", 
                    "Éxito", JOptionPane.INFORMATION_MESSAGE, null);
        } catch (NonexistentEntityException ex) {
            JOptionPane.showMessageDialog(this, "No existe el cliente", 
                    "Error", JOptionPane.ERROR_MESSAGE, null);
        } catch (PreexistingEntityException ex) {
            JOptionPane.showMessageDialog(this, "Ya existe esa orden", 
                    "Error", JOptionPane.ERROR_MESSAGE, null);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error en el sistema", 
                    "Error", JOptionPane.ERROR_MESSAGE, null);
        }
        borrarTiene();
        txtId.setText("");
        lblNom.setText("");
        txtCom.setText("");
        borrarListas();
        actualizaListas();
    }//GEN-LAST:event_btnOrdenAceptarActionPerformed

    private void btnOrdenCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrdenCancelarActionPerformed
        dispose();
    }//GEN-LAST:event_btnOrdenCancelarActionPerformed

    private void btnAgregarOrdenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarOrdenActionPerformed
        if (TomaOrden.isVisible()) {
            TomaOrden.setVisible(false);
        } else {
            TomaOrden.setVisible(true);
            centrar(TomaOrden);
            int sig = ne.lastInsert() + 1;
            lblFolio.setText(String.valueOf(sig));
        }        
    }//GEN-LAST:event_btnAgregarOrdenActionPerformed

    private void btnEliminarOrdenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarOrdenActionPerformed
        try {
            Orden o = new Orden(Integer.parseInt(id));
            Orden buscarOrden = ne.buscarOrden(o);
            o.setIdOrden(buscarOrden.getIdOrden());
            o.setIdCliente(buscarOrden.getIdCliente());
            o.setIdVehiculo(buscarOrden.getIdVehiculo());
            ne.eliminarOrden(o);
            JOptionPane.showMessageDialog(this, "Orden Eliminada correctamente", 
                    "Éxito", JOptionPane.INFORMATION_MESSAGE, null);
        } catch (NonexistentEntityException ex) {
            Logger.getLogger(SSCAutoFrio.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(SSCAutoFrio.class.getName()).log(Level.SEVERE, null, ex);
        }
        borrarListas();
        actualizaListas();
    }//GEN-LAST:event_btnEliminarOrdenActionPerformed

    private void buscarCliente() {
        if (!txtId.getText().equals("")) {
            try {
                Cliente c = ne.buscarCliente(txtId.getText().trim());
                lblNom.setText(c.getNombre() + " " + c.getApellidoPat() + " " + c.getApellidoMat());
                borrarTiene();
                cargarVehiculos(c);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "     No se encontro al Cliente", "Error", JOptionPane.ERROR_MESSAGE);
                lblNom.setText("");
            }
        } else {
            lblNom.setText("");
        }
    }

    private void cargarVehiculos(Cliente cliente) throws NonexistentEntityException {
        List<Tiene> tiene = ne.getVehiculosPorCliente(cliente);
        for (Tiene t : tiene) {
            table4.addRow(new Object[]{t.getIdVehiculo().getIdVehiculo(),
                t.getIdVehiculo().getAño() + " " + t.getIdVehiculo().getMarca()
                + " " + t.getIdVehiculo().getModelo() + " "
                + t.getIdVehiculo().getCilindros() + " "
                + t.getIdVehiculo().getMotor()});
        }
    }

    public void borrarTiene() {
        for (int i = 0; i < tableTie.getRowCount(); i++) {
            table4.removeRow(i);
            i--;
        }
    }

    private void actualizaListas() {
        List<Orden> lista1 = ne.listaEstado("Registrada");
        List<Orden> lista2 = ne.listaEstado("Cotizada");
        List<Orden> lista3 = ne.listaEstado("Aceptada");
        for (Orden o : lista1) {
            table1.addRow(new Object[]{o.getIdOrden(),
                o.getIdCliente().getNombre() + " "
                + o.getIdCliente().getApellidoPat(),
                o.getIdVehiculo().getAño() + " "
                + o.getIdVehiculo().getModelo() + " "
                + o.getIdVehiculo().getMarca(), o.getFecha()});
        }
        for (Orden o : lista2) {
            table2.addRow(new Object[]{o.getIdOrden(),
                o.getIdCliente().getNombre() + " "
                + o.getIdCliente().getApellidoPat(),
                o.getIdVehiculo().getAño() + " "
                + o.getIdVehiculo().getModelo() + " "
                + o.getIdVehiculo().getMarca(), o.getFecha()});
        }
        for (Orden o : lista3) {
            table3.addRow(new Object[]{o.getIdOrden(),
                o.getIdCliente().getNombre() + " "
                + o.getIdCliente().getApellidoPat(),
                o.getIdVehiculo().getAño() + " "
                + o.getIdVehiculo().getModelo() + " "
                + o.getIdVehiculo().getMarca(), o.getFecha()});
        }
    }

    public void borrarListas() {
        for (int i = 0; i < table1.getRowCount(); i++) {
            table1.removeRow(i);
            i--;
        }
        for (int i = 0; i < table2.getRowCount(); i++) {
            table2.removeRow(i);
            i--;
        }
        for (int i = 0; i < table3.getRowCount(); i++) {
            table2.removeRow(i);
            i--;
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Synthetica Look and Feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        try {
            UIManager.setLookAndFeel(new SyntheticaWhiteVisionLookAndFeel());
        } catch (Exception e) {
            e.printStackTrace();
        }
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SSCAutoFrio().setVisible(true);
            }
        });
    }
    //<editor-fold defaultstate="collapsed" desc=" Variables ">    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JInternalFrame Cotizacion;
    private javax.swing.JInternalFrame Monitor;
    private javax.swing.JInternalFrame TomaOrden;
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JButton btnAgregarOrden;
    private javax.swing.JButton btnEliminarOrden;
    private javax.swing.JButton btnMonitor;
    private javax.swing.JButton btnOrden;
    private javax.swing.JButton btnOrdenAceptar;
    private javax.swing.JButton btnOrdenCancelar;
    private javax.swing.JMenuItem contentMenuItem;
    private javax.swing.JMenuItem copyMenuItem;
    private javax.swing.JMenuItem cutMenuItem;
    private javax.swing.JMenuItem deleteMenuItem;
    private javax.swing.JDesktopPane desktopPane;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JLabel lblFolio;
    private javax.swing.JLabel lblNom;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem openMenuItem;
    private javax.swing.JMenuItem pasteMenuItem;
    private javax.swing.JMenuItem saveAsMenuItem;
    private javax.swing.JMenuItem saveMenuItem;
    private javax.swing.JTable tableAce;
    private javax.swing.JTable tableCot;
    private javax.swing.JTable tableReg;
    private javax.swing.JTable tableTie;
    private javax.swing.JTextArea txtCom;
    private javax.swing.JTextField txtId;
    // End of variables declaration//GEN-END:variables
    //</editor-fold>
}
